services:
  cv-web:
    build: ./frontend
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.cv-web-route.rule=Host(`cv.ddldlabs.com.ng`)
      - traefik.http.routers.cv-web-route.tls=true
      - traefik.http.routers.cv-web-route.tls.certresolver=myresolver
      - traefik.http.routers.cv-web-route.middlewares=https-redirect@docker
      - traefik.http.services.cv-web.loadbalancer.server.port=80
      - traefik.http.routers.cv-web-http-to-https.rule=Host(`cv.ddldlabs.com.ng`)
      - traefik.http.routers.cv-web-http-to-https.entrypoints=web
      - traefik.http.routers.cv-web-http-to-https.middlewares=https-redirect
    networks:
      - ddld-net
  cv-api:
    restart: always
    build: ./backend
    volumes:
     - $PWD/STORAGE/uploads:/app/src/uploads
    environment:
      APP_PORT: "${APP_PORT}"
      MONGO_URI: "${MONGO_URI}"
    labels:
      - traefik.enable=true
      - traefik.http.routers.cv-api-route.rule=Host(`api.cv.ddldlabs.com.ng`)
      - traefik.http.routers.cv-api-route.tls=true
      - traefik.http.routers.cv-api-route.tls.certresolver=myresolver
      - traefik.http.routers.cv-api-route.middlewares=https-redirect@docker
      - traefik.http.services.cv-api.loadbalancer.server.port=3000
      - traefik.http.routers.cv-api-http-to-https.rule=Host(`api.cv.ddldlabs.com.ng`)
      - traefik.http.routers.cv-api-http-to-https.entrypoints=web
      - traefik.http.routers.cv-api-http-to-https.middlewares=https-redirect
    networks:
      - ddld-net
networks:
  ddld-net:
    external: true
